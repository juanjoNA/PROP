/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CapaPresentacio;

import CapaDomini.Controladors.ControladorAlgoritmes;
import CapaDomini.Controladors.ControladorComprimir;
import CapaDomini.Controladors.ControladorComprimirCarpeta;
import Excepcions.CaracterNoASCII;
import Excepcions.DatosIncorrectos;
import Excepcions.ExtensionIncorrecta;
import Excepcions.VersionPPMIncorrecta;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;

/**
 *
 * @author Juanjo
 */
public class ComprimirCarpeta extends javax.swing.JPanel {

    ControladorComprimirCarpeta ctrComprimirCarpetes;
    ControladorAlgoritmes ctrAlgoritmos;
    MainFrame mainForm;
    
    public ComprimirCarpeta(MainFrame mainForm) {
        initComponents();
        this.mainForm = mainForm;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        bgRadiosTXT = new javax.swing.ButtonGroup();
        bgRadiosPPM = new javax.swing.ButtonGroup();
        bgSubsampling = new javax.swing.ButtonGroup();
        tfPath = new javax.swing.JTextField();
        panelRadioButtons = new javax.swing.JPanel();
        labelTXT = new javax.swing.JLabel();
        labelPPM = new javax.swing.JLabel();
        panelButtonsTXT = new javax.swing.JPanel();
        panelButtonsPPM = new javax.swing.JPanel();
        bBrowser = new javax.swing.JButton();
        bComprimir = new javax.swing.JButton();
        panelEstadistiques = new javax.swing.JPanel();
        jVelocitat = new javax.swing.JLabel();
        labelVelCompr = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        labelPercCompr = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        labelTempsCompr = new javax.swing.JLabel();
        panelDadesJPEG = new javax.swing.JPanel();
        panelSubsampling = new javax.swing.JPanel();
        labelSubsampling = new javax.swing.JLabel();
        radio444 = new javax.swing.JRadioButton();
        radio440 = new javax.swing.JRadioButton();
        radio411 = new javax.swing.JRadioButton();
        radio422 = new javax.swing.JRadioButton();
        radio420 = new javax.swing.JRadioButton();
        panelSlider = new javax.swing.JPanel();
        sliderJPEG = new javax.swing.JSlider();
        labelGrauCompr = new javax.swing.JLabel();
        labelValorGrauCompresio = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(1000, 600));
        setLayout(new java.awt.GridBagLayout());

        tfPath.setEditable(false);
        tfPath.setMaximumSize(new java.awt.Dimension(2147483647, 30));
        tfPath.setMinimumSize(new java.awt.Dimension(50, 30));
        tfPath.setPreferredSize(new java.awt.Dimension(50, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        add(tfPath, gridBagConstraints);

        panelRadioButtons.setLayout(new java.awt.GridBagLayout());
        panelRadioButtons.setVisible(false);

        labelTXT.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelTXT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTXT.setText("Fitxers TXT");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        panelRadioButtons.add(labelTXT, gridBagConstraints);

        labelPPM.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelPPM.setText("Fitxers PPM");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        panelRadioButtons.add(labelPPM, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        panelRadioButtons.add(panelButtonsTXT, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        panelRadioButtons.add(panelButtonsPPM, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(30, 20, 10, 0);
        add(panelRadioButtons, gridBagConstraints);

        bBrowser.setText("Browser");
        bBrowser.setMaximumSize(new java.awt.Dimension(150, 50));
        bBrowser.setMinimumSize(new java.awt.Dimension(120, 45));
        bBrowser.setPreferredSize(new java.awt.Dimension(120, 45));
        bBrowser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBrowserActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(20, 30, 0, 30);
        add(bBrowser, gridBagConstraints);

        bComprimir.setText("Comprmir");
        bComprimir.setMaximumSize(new java.awt.Dimension(190, 65));
        bComprimir.setMinimumSize(new java.awt.Dimension(120, 45));
        bComprimir.setVisible(false);
        bComprimir.setPreferredSize(new java.awt.Dimension(120, 45));
        bComprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bComprimirActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(30, 30, 10, 30);
        add(bComprimir, gridBagConstraints);

        panelEstadistiques.setLayout(new java.awt.GridBagLayout());
        panelEstadistiques.setVisible(false);

        jVelocitat.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jVelocitat.setText("Velocitat de Compressio: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        panelEstadistiques.add(jVelocitat, gridBagConstraints);

        labelVelCompr.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelVelCompr.setText("velComp");
        labelVelCompr.setPreferredSize(new java.awt.Dimension(200, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 20, 0);
        panelEstadistiques.add(labelVelCompr, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Percentatge de Compressi√≥: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panelEstadistiques.add(jLabel4, gridBagConstraints);

        labelPercCompr.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelPercCompr.setText("PercComp");
        labelPercCompr.setPreferredSize(new java.awt.Dimension(200, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        panelEstadistiques.add(labelPercCompr, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Temps total:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 200, 20, 0);
        panelEstadistiques.add(jLabel1, gridBagConstraints);

        labelTempsCompr.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelTempsCompr.setText("TempsComp");
        labelTempsCompr.setPreferredSize(new java.awt.Dimension(200, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 20, 0);
        panelEstadistiques.add(labelTempsCompr, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 10, 10);
        add(panelEstadistiques, gridBagConstraints);

        panelDadesJPEG.setLayout(new java.awt.GridBagLayout());
        panelDadesJPEG.setVisible(false);

        panelSubsampling.setLayout(new java.awt.GridBagLayout());

        labelSubsampling.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelSubsampling.setText("Subsampling");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        panelSubsampling.add(labelSubsampling, gridBagConstraints);

        bgSubsampling.add(radio444);
        radio444.setText("4 : 4 : 4");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        panelSubsampling.add(radio444, gridBagConstraints);

        bgSubsampling.add(radio440);
        radio440.setText("4 : 4 : 0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        panelSubsampling.add(radio440, gridBagConstraints);

        bgSubsampling.add(radio411);
        radio411.setText("4 : 1 : 1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        panelSubsampling.add(radio411, gridBagConstraints);

        bgSubsampling.add(radio422);
        radio422.setText("4 : 2 : 2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        panelSubsampling.add(radio422, gridBagConstraints);

        bgSubsampling.add(radio420);
        radio420.setText("4 : 2 : 0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        panelSubsampling.add(radio420, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 40, 0, 0);
        panelDadesJPEG.add(panelSubsampling, gridBagConstraints);

        panelSlider.setLayout(new java.awt.GridBagLayout());

        sliderJPEG.setMajorTickSpacing(99);
        sliderJPEG.setMinimum(1);
        sliderJPEG.setMinorTickSpacing(99);
        sliderJPEG.setPaintLabels(true);
        sliderJPEG.setPaintTicks(true);
        sliderJPEG.setToolTipText("");
        sliderJPEG.setValue(0);
        sliderJPEG.setPreferredSize(new java.awt.Dimension(400, 50));
        sliderJPEG.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderJPEGStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panelSlider.add(sliderJPEG, gridBagConstraints);

        labelGrauCompr.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelGrauCompr.setText("Grau Compressi√≥");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 15, 0);
        panelSlider.add(labelGrauCompr, gridBagConstraints);

        labelValorGrauCompresio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelValorGrauCompresio.setText("1");
        labelValorGrauCompresio.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        labelValorGrauCompresio.setMaximumSize(new java.awt.Dimension(35, 22));
        labelValorGrauCompresio.setMinimumSize(new java.awt.Dimension(35, 22));
        labelValorGrauCompresio.setPreferredSize(new java.awt.Dimension(35, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 5, 0);
        panelSlider.add(labelValorGrauCompresio, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        panelDadesJPEG.add(panelSlider, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(30, 0, 10, 0);
        add(panelDadesJPEG, gridBagConstraints);

        jLabel2.setText("Selecciona una carpeta:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(20, 30, 0, 0);
        add(jLabel2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void bBrowserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBrowserActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = chooser.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            tfPath.setText(chooser.getSelectedFile().getPath());
            crearBotones();
            bComprimir.setVisible(true);
            panelEstadistiques.setVisible(false);
        }
    }//GEN-LAST:event_bBrowserActionPerformed

    private void bComprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bComprimirActionPerformed
        
        String algTXT, algPPM;
        double[] resultat;
        if(bgRadiosTXT.getSelection()==null){
            JOptionPane.showMessageDialog(this, "Selecciona un algoritme per comprimir els arxius de text");
            return;
        } else if(bgRadiosPPM.getSelection()==null){
            JOptionPane.showMessageDialog(this, "Selecciona un algoritme per comprimir els arxius PPM");
            return;
        }

        algTXT = bgRadiosTXT.getSelection().getActionCommand(); //Esta String se la pasamos al controlador para que seleccione el algoritmo de compresion
        algPPM = bgRadiosPPM.getSelection().getActionCommand(); //Esta String se la pasamos al controlador para que seleccione el algoritmo de compresion
        
        int resposta = JOptionPane.showConfirmDialog(this,"Vols guardar el fitxer", "Guardar", JOptionPane.YES_NO_OPTION);
        boolean guardar = (resposta==JOptionPane.YES_OPTION);
        
        if(algPPM.equals("JPEG")){
            ctrComprimirCarpetes = new ControladorComprimirCarpeta(tfPath.getText(), algTXT, guardar, sliderJPEG.getValue(), bgSubsampling.getSelection().getActionCommand());
        }else{
            ctrComprimirCarpetes = new ControladorComprimirCarpeta(tfPath.getText(), algTXT, guardar);
        }

        
        try {
            setCursor(new Cursor(Cursor.WAIT_CURSOR));
            ctrComprimirCarpetes.executar();
            resultat = ctrComprimirCarpetes.getResult();
            setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
            labelPercCompr.setText(String.format("%.2f", resultat[1]) + " %");
            labelTempsCompr.setText(Double.toString(resultat[0]) + " ms");
            labelVelCompr.setText(String.format("%.2f",resultat[2]) + " KB/s");
            panelEstadistiques.setVisible(true);
            
        } catch (VersionPPMIncorrecta ex) {
            JOptionPane.showMessageDialog(this, mainForm.returnException(4));
        } catch (DatosIncorrectos ex) {
            JOptionPane.showMessageDialog(this, mainForm.returnException(3));
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, mainForm.returnException(5));
        } catch (CaracterNoASCII ex) {
            JOptionPane.showMessageDialog(this, mainForm.returnException(1));
        } catch (ExtensionIncorrecta ex) {
            JOptionPane.showMessageDialog(this, mainForm.returnException(2));
        } 
        
    }//GEN-LAST:event_bComprimirActionPerformed

    private void sliderJPEGStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderJPEGStateChanged
        labelValorGrauCompresio.setText(String.valueOf(sliderJPEG.getValue()));
    }//GEN-LAST:event_sliderJPEGStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBrowser;
    private javax.swing.JButton bComprimir;
    private javax.swing.ButtonGroup bgRadiosPPM;
    private javax.swing.ButtonGroup bgRadiosTXT;
    private javax.swing.ButtonGroup bgSubsampling;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jVelocitat;
    private javax.swing.JLabel labelGrauCompr;
    private javax.swing.JLabel labelPPM;
    private javax.swing.JLabel labelPercCompr;
    private javax.swing.JLabel labelSubsampling;
    private javax.swing.JLabel labelTXT;
    private javax.swing.JLabel labelTempsCompr;
    private javax.swing.JLabel labelValorGrauCompresio;
    private javax.swing.JLabel labelVelCompr;
    private javax.swing.JPanel panelButtonsPPM;
    private javax.swing.JPanel panelButtonsTXT;
    private javax.swing.JPanel panelDadesJPEG;
    private javax.swing.JPanel panelEstadistiques;
    private javax.swing.JPanel panelRadioButtons;
    private javax.swing.JPanel panelSlider;
    private javax.swing.JPanel panelSubsampling;
    private javax.swing.JRadioButton radio411;
    private javax.swing.JRadioButton radio420;
    private javax.swing.JRadioButton radio422;
    private javax.swing.JRadioButton radio440;
    private javax.swing.JRadioButton radio444;
    private javax.swing.JSlider sliderJPEG;
    private javax.swing.JTextField tfPath;
    // End of variables declaration//GEN-END:variables


public void crearBotones(){
    
    ArrayList<String> algs;
    ctrAlgoritmos = new ControladorAlgoritmes("txt");
    algs = ctrAlgoritmos.getAlgoritmes();
    panelButtonsPPM.removeAll();
    panelButtonsTXT.removeAll();
    bgRadiosTXT.clearSelection();
    bgRadiosPPM.clearSelection();
    if(panelDadesJPEG.isVisible()) panelDadesJPEG.setVisible(false);
        
    for(String nom : algs){
        JRadioButton b = new JRadioButton();
        b.setText(nom);
        b.setActionCommand(nom);
        b.setName(nom);
        bgRadiosTXT.add(b);
        panelButtonsTXT.add(b);
            
    }
    
    ctrAlgoritmos = new ControladorAlgoritmes("ppm");
    algs = ctrAlgoritmos.getAlgoritmes();
    
    for(String nom : algs){
        JRadioButton b = new JRadioButton();
        b.setText(nom);
        b.setActionCommand(nom);
        b.setName(nom);
        bgRadiosPPM.add(b);
        panelButtonsPPM.add(b);
        ActionListener al = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(nom.equals("JPEG")) panelDadesJPEG.setVisible(true);
                else panelDadesJPEG.setVisible(false);
            }
        };
        b.addActionListener(al);
    }
    panelRadioButtons.setVisible(true);
    panelRadioButtons.invalidate();
    panelRadioButtons.validate();
}

}
